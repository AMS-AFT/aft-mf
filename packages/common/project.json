{
  "name": "common",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "packages/common/src",
  "projectType": "library",
  "targets": {
    "build": {
      "executor": "@nx/rollup:rollup",
      "outputs": ["{options.outputPath}"],
      "defaultConfiguration": "production",
      "options": {
        "main": "packages/common/src/index.ts",
        "outputPath": "dist/common",
        "tsConfig": "packages/common/tsconfig.lib.json",
        "compiler": "tsc",
        "project": "packages/common/package.json",
        "format": ["cjs", "esm"],
        "assets": [
          {
            "glob": "packages/common/README.md",
            "input": ".",
            "output": "."
          }
        ]
      },
      "configurations": {
        "production": {
          "optimization": true,
          "sourceMap": false,
          "namedChunks": false,
          "extractLicenses": true,
          "vendorChunk": false
        }
      }
    },
    "publish": {
      "command": "pnpm publish dist/common --access public --registry http://localhost:4873/ --no-git-checks",
      "dependsOn": ["build"]
    },
    "lint": {
      "executor": "@nx/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["packages/common/**/*.ts", "packages/common/package.json"]
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/docs/{projectRoot}/coverage"],
      "options": {
        "jestConfig": "packages/common/jest.config.ts",
        "passWithNoTests": true
      },
      "configurations": {
        "ci": {
          "ci": true,
          "codeCoverage": true
        }
      }
    },
    "docs": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["npx typedoc --options packages/common/typedoc.json", "nx run common:test:ci"],
        "parallel": false
      }
    },
    "version": {
      "executor": "@jscutlery/semver:version",
      "options": {
        "skipCommitTypes": ["docs", "ci", "chore", "build", "style", "test"],
        "commitMessageFormat": "chore(${projectName}): release version ${version}",
        "tagPrefix": "${projectName}-v",
        "noVerify": true,
        "push": true,
        "postTargets": ["common:github"]
      }
    },
    "github": {
      "executor": "@jscutlery/semver:github",
      "options": {
        "tag": "${tag}",
        "notes": "${notes}"
      }
    }
  },
  "tags": ["type:library", "scope: none", "framework:none"]
}
